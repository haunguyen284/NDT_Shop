/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form.sanpham;

import comon.constant.sanpham.TrangThaiChatLieu;
import dto.sanpham.ChatLieuDTO;
import java.util.List;
import javax.swing.JOptionPane;
import service.sanpham.ChatLieuService;
import service.sanpham.impl.ChatLieuServiceImpl;
import view.dialog.ShowMessage;

/**
 *
 * @author nguyenth28
 */
public class DialogChatLieu extends javax.swing.JDialog {

    private final ChatLieuService chatLieuService;
    public ChatLieuDTO selectedChatLieu;

    /**
     * Creates new form DialogMauSac
     */
    public DialogChatLieu(java.awt.Frame parent, boolean modal, ChatLieuDTO dto) {
        super(parent, modal);
        initComponents();
        chatLieuService = new ChatLieuServiceImpl();
        loadDataTable();
        selectedChatLieu = dto;
        if (dto != null) fillPhanTu(dto);
    }
    
    private void fillPhanTu(ChatLieuDTO dto){
        if (dto.getTrangThaiChatLieu()== TrangThaiChatLieu.ACTIVE) {
            cbbTrangThai.setSelectedIndex(0);
        } else {
            cbbTrangThai.setSelectedIndex(1);
        }
        txtMa.setText(dto.getMa());
        txtTen.setText(dto.getTen());
    }

    private void loadDataTable() {
        TrangThaiChatLieu trangThai = null;
        if (cbbHienThi.getSelectedItem().toString().equals("ACTIVE")) {
            trangThai = TrangThaiChatLieu.ACTIVE;
        } else if (cbbHienThi.getSelectedItem().toString().equals("IN ACTIVE")) {
            trangThai = TrangThaiChatLieu.IN_ACTIVE;
        }
        List<ChatLieuDTO> listDTO = chatLieuService.findAll(trangThai);
        tbHienThi.clearAllRow();
        for (ChatLieuDTO dto : listDTO) {
            tbHienThi.addRow(new Object[]{
                dto.getId(),
                dto.getMa(),
                dto.getTen(),
                dto.getTrangThaiChatLieu() == TrangThaiChatLieu.ACTIVE ? "ACTIVE" : "IN ACTIVE"
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnThem = new view.swing.Button();
        jLabel4 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbbTrangThai = new javax.swing.JComboBox<>();
        btnSua = new view.swing.Button();
        btnChon = new view.swing.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHienThi = new view.swing.table.Table();
        jLabel5 = new javax.swing.JLabel();
        cbbHienThi = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Mã");

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("QUẢN LÝ CHẤT LIỆU");
        jLabel1.setToolTipText("");

        btnThem.setBackground(new java.awt.Color(0, 102, 255));
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel4.setText("Trạng thái");

        jLabel3.setText("Tên");

        cbbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVE", "IN ACTIVE" }));

        btnSua.setBackground(new java.awt.Color(0, 102, 255));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnChon.setBackground(new java.awt.Color(0, 102, 255));
        btnChon.setForeground(new java.awt.Color(255, 255, 255));
        btnChon.setText("Chọn");
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        tbHienThi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Mã", "Tên", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHienThi.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbHienThi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHienThiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHienThi);

        jLabel5.setText("Hiển thị");

        cbbHienThi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVE", "IN ACTIVE", "ALL" }));
        cbbHienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbHienThiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(128, 128, 128))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnChon, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMa, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtTen, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbbTrangThai, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbbHienThi, javax.swing.GroupLayout.Alignment.TRAILING, 0, 362, Short.MAX_VALUE))))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbHienThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private ChatLieuDTO getDTOFromInput() {
        ChatLieuDTO dto = new ChatLieuDTO();
        String ma = txtMa.getText();
        String ten = txtTen.getText();
        TrangThaiChatLieu trangThai = TrangThaiChatLieu.IN_ACTIVE;
        if (cbbTrangThai.getSelectedIndex() == 0) {
            trangThai = TrangThaiChatLieu.ACTIVE;
        }
        dto.setMa(ma);
        dto.setTen(ten);
        dto.setTrangThaiChatLieu(trangThai);
        return dto;
    }

    private String getSelectedIdFromTable() {
        int selectedRow = tbHienThi.getSelectedRow();
        if (selectedRow == -1) {
            return null;
        } else {
            return tbHienThi.getValueAt(selectedRow, 0).toString();
        }
    }

    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonActionPerformed
        String selectedId = getSelectedIdFromTable();
        if (selectedId == null) {
            ShowMessage.show("Chưa chọn hàng");
            return;
        }
        selectedChatLieu = getDTOFromInput();
        selectedChatLieu.setId(selectedId);
        this.dispose();
    }//GEN-LAST:event_btnChonActionPerformed

    private void tbHienThiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHienThiMouseClicked
        int selectedRow = tbHienThi.getSelectedRow();
        if (selectedRow == -1) {
            return;
        }
        String selectedId = getSelectedIdFromTable();
        String ma = tbHienThi.getValueAt(selectedRow, 1).toString();
        String ten = tbHienThi.getValueAt(selectedRow, 2).toString();
        String trangThai = tbHienThi.getValueAt(selectedRow, 3).toString();
        if (trangThai.equals("ACTIVE")) {
            cbbTrangThai.setSelectedIndex(0);
        } else {
            cbbTrangThai.setSelectedIndex(1);
        }
        txtMa.setText(ma);
        txtTen.setText(ten);
        if (evt.getClickCount() == 2) {
            selectedChatLieu = getDTOFromInput();
            selectedChatLieu.setId(selectedId);
            this.dispose();
        }
    }//GEN-LAST:event_tbHienThiMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ChatLieuDTO dto = getDTOFromInput();
        String result = chatLieuService.create(dto);
        ShowMessage.show(result);
        loadDataTable();
    }//GEN-LAST:event_btnThemActionPerformed

    private void cbbHienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbHienThiActionPerformed
        loadDataTable();
    }//GEN-LAST:event_cbbHienThiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        String selectedId = getSelectedIdFromTable();
        if (selectedId == null) {
            return;
        }
        ChatLieuDTO dto = getDTOFromInput();
        dto.setId(selectedId);
        String result = chatLieuService.update(dto);
        ShowMessage.show(result);
        loadDataTable();
    }//GEN-LAST:event_btnSuaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.swing.Button btnChon;
    private view.swing.Button btnSua;
    private view.swing.Button btnThem;
    private javax.swing.JComboBox<String> cbbHienThi;
    private javax.swing.JComboBox<String> cbbTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private view.swing.table.Table tbHienThi;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
